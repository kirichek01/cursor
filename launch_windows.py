#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Windows VM —Å MT5
"""

import os
import subprocess
import time
import sys
import shutil

def check_windows_vm():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ Windows VM"""
    windows_path = "/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized"
    return os.path.exists(windows_path)

def copy_project_to_windows():
    """–ö–æ–ø–∏—Ä—É–µ—Ç –ø—Ä–æ–µ–∫—Ç –≤ Windows VM"""
    print("üìÅ –ö–æ–ø–∏—Ä—É—é –ø—Ä–æ–µ–∫—Ç –≤ Windows VM...")
    
    source = os.getcwd()
    destination = "/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized/–º–∞–∫–µ—Ç"
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        os.makedirs(destination, exist_ok=True)
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å –ø–æ–º–æ—â—å—é shutil
        for item in os.listdir(source):
            s = os.path.join(source, item)
            d = os.path.join(destination, item)
            if os.path.isdir(s):
                shutil.copytree(s, d, dirs_exist_ok=True)
            else:
                shutil.copy2(s, d)
        
        print("‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ Windows VM")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def open_windows_terminal():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª Windows VM"""
    print("üñ•Ô∏è  –û—Ç–∫—Ä—ã–≤–∞—é —Ç–µ—Ä–º–∏–Ω–∞–ª Windows VM...")
    
    terminal_path = "/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized/–¢–µ—Ä–º–∏–Ω–∞–ª.app"
    
    if os.path.exists(terminal_path):
        subprocess.run(["open", terminal_path])
        print("‚úÖ –¢–µ—Ä–º–∏–Ω–∞–ª Windows VM –æ—Ç–∫—Ä—ã—Ç")
        return True
    else:
        print("‚ùå –¢–µ—Ä–º–∏–Ω–∞–ª Windows VM –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Windows VM —Å MT5...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Windows VM
    if not check_windows_vm():
        print("‚ùå Windows VM –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Parallels Desktop –∏ Windows VM")
        return
    
    print("‚úÖ Windows VM –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
    if not copy_project_to_windows():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
        return
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª Windows
    if not open_windows_terminal():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª Windows")
        return
    
    print("\n" + "=" * 50)
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Windows VM:")
    print("1. –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è —Ç–µ—Ä–º–∏–Ω–∞–ª–µ Windows –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   cd /Users/vladislavkirichek/Applications\ \(Parallels\)/{64a44e8b-2a77-4379-9821-4cb170697000}\ Applications.localized/–º–∞–∫–µ—Ç")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   python -m pip install --upgrade pip")
    print("   pip install -r requirements.txt")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MT5:")
    print("   python -c \"import MetaTrader5 as mt5; print('MT5 –¥–æ—Å—Ç—É–ø–µ–Ω')\"")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:")
    print("   python main.py")
    print("=" * 50)
    
    print("\nüéØ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π bat-—Ñ–∞–π–ª:")
    print("   start_windows.bat")
    
    print("\nüåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤ Windows VM:")
    print("   http://localhost:8550")

if __name__ == "__main__":
    main() 