#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Windows VM —á–µ—Ä–µ–∑ Parallels Desktop
"""

import os
import subprocess
import sys
import time
from pathlib import Path

def run_command_in_windows(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ Windows VM —á–µ—Ä–µ–∑ Parallels"""
    try:
        # –ü—É—Ç—å –∫ Windows VM
        windows_path = "/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized"
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Windows
        full_command = f'"{windows_path}/–¢–µ—Ä–º–∏–Ω–∞–ª.app/Contents/MacOS/WinAppHelper" --ivmid 5 --command "{command}"'
        
        print(f"üöÄ –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É –≤ Windows VM: {command}")
        result = subprocess.run(full_command, shell=True, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            return result.stdout
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {result.stderr}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Windows VM: {e}")
        return None

def setup_project_in_windows():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –≤ Windows VM"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Windows VM...")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç –≤ Windows
    project_path = os.getcwd()
    windows_project_path = "/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized/–º–∞–∫–µ—Ç"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Windows
    os.makedirs(windows_project_path, exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    subprocess.run(f"cp -r {project_path}/* {windows_project_path}/", shell=True)
    
    print("üìÅ –ü—Ä–æ–µ–∫—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ Windows VM")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Windows
    commands = [
        "cd /Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized/–º–∞–∫–µ—Ç",
        "python -m pip install --upgrade pip",
        "pip install -r requirements.txt",
        "python main.py"
    ]
    
    for cmd in commands:
        result = run_command_in_windows(cmd)
        if result is None:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ Windows VM")
            return False
    
    return True

def main():
    print("üñ•Ô∏è  –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Windows VM —Å MT5...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Windows VM –∑–∞–ø—É—â–µ–Ω–∞
    if not os.path.exists("/Users/vladislavkirichek/Applications (Parallels)/{64a44e8b-2a77-4379-9821-4cb170697000} Applications.localized"):
        print("‚ùå Windows VM –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Parallels Desktop –∏ Windows VM")
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    if setup_project_in_windows():
        print("‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ Windows VM —Å MT5!")
        print("üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ Windows VM")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ Windows VM")

if __name__ == "__main__":
    main() 