#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Cursor —Å MT5 —á–µ—Ä–µ–∑ Flask —Å–µ—Ä–≤–µ—Ä
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_cursor_mt5_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å MT5"""
    print("üßæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Cursor —Å MT5 —á–µ—Ä–µ–∑ Flask —Å–µ—Ä–≤–µ—Ä")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π:")
    
    try:
        from utils.cursor_send_order_improved import send_order, test_connection
        print("‚úÖ –ú–æ–¥—É–ª—å cursor_send_order_improved –¥–æ—Å—Ç—É–ø–µ–Ω")
        cursor_available = True
    except ImportError as e:
        print(f"‚ùå –ú–æ–¥—É–ª—å cursor_send_order_improved –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        cursor_available = False
    
    try:
        from utils.trading_functions import place_trade, test_mt5_connection
        print("‚úÖ –ú–æ–¥—É–ª—å trading_functions –¥–æ—Å—Ç—É–ø–µ–Ω")
        trading_available = True
    except ImportError as e:
        print(f"‚ùå –ú–æ–¥—É–ª—å trading_functions –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        trading_available = False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MT5 —Å–µ—Ä–≤–µ—Ä—É
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MT5 —Å–µ—Ä–≤–µ—Ä—É:")
    
    if cursor_available:
        try:
            connection_status = test_connection()
            if connection_status:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MT5 —Å–µ—Ä–≤–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ä–¥–µ—Ä–∞
                print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ä–¥–µ—Ä–∞:")
                try:
                    result = send_order("EURUSD", 0.01, "buy", comment="Test from Cursor")
                    if result.get('success'):
                        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {result}")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ä–¥–µ—Ä–∞: {result.get('error')}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ä–¥–µ—Ä–∞: {e}")
            else:
                print("‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MT5 —Å–µ—Ä–≤–µ—Ä—É")
                print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
                print("  - Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ Windows VM")
                print("  - IP –∞–¥—Ä–µ—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                print("  - –°–µ—Ç–µ–≤—ã–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Ç–æ—Ä–≥–æ–≤–ª–∏
    print("\n4. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Ç–æ—Ä–≥–æ–≤–ª–∏:")
    
    if trading_available:
        try:
            # –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ place_trade
            print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ place_trade...")
            trade_result = place_trade("XAUUSD", 0.01, "buy", comment="Demo trade")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {trade_result}")
            
            # –¢–µ—Å—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏...")
            from utils.trading_functions import place_multiple_trades
            
            trades = [
                {'symbol': 'EURUSD', 'volume': 0.01, 'order_type': 'buy', 'sl': 1.2000, 'tp': 1.2100},
                {'symbol': 'GBPUSD', 'volume': 0.01, 'order_type': 'sell', 'sl': 1.3000, 'tp': 1.2900}
            ]
            
            batch_result = place_multiple_trades(trades)
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {batch_result}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π —Ç–æ—Ä–≥–æ–≤–ª–∏: {e}")
    
    # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å TradeManagerService
    print("\n5. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å TradeManagerService:")
    
    try:
        from services.trade_manager_service import TradeManagerService
        print("‚úÖ TradeManagerService –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        trade_manager = TradeManagerService()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
        status = trade_manager.get_status()
        print(f"–°—Ç–∞—Ç—É—Å —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {status}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        account_info = trade_manager.get_account_info()
        print(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ: {account_info}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å TradeManagerService: {e}")
    
    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å Flask —Å–µ—Ä–≤–µ—Ä –Ω–∞ Windows VM")
    print("2. –û–±–Ω–æ–≤–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤ utils/cursor_send_order_improved.py")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MT5 –∑–∞–ø—É—â–µ–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –Ω–∞ Windows VM")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–∂–¥—É macOS –∏ Windows VM")

def demonstrate_usage():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    print("\nüìö –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("-" * 40)
    
    print("\n1. –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ä–¥–µ—Ä–∞:")
    print("""
from utils.trading_functions import place_trade

result = place_trade("EURUSD", 0.1, "buy")
if result['success']:
    print("‚úÖ –û—Ä–¥–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω")
else:
    print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
    """)
    
    print("\n2. –û—Ä–¥–µ—Ä —Å SL/TP:")
    print("""
result = place_trade(
    symbol="XAUUSD",
    volume=0.1,
    order_type="buy",
    sl=1950.0,
    tp=2000.0,
    comment="Gold trade"
)
    """)
    
    print("\n3. –ü–∞–∫–µ—Ç–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞:")
    print("""
from utils.trading_functions import place_multiple_trades

trades = [
    {'symbol': 'EURUSD', 'volume': 0.1, 'order_type': 'buy'},
    {'symbol': 'GBPUSD', 'volume': 0.05, 'order_type': 'sell'}
]

batch_result = place_multiple_trades(trades)
    """)
    
    print("\n4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç:")
    print("""
from utils.trading_functions import place_trade

class TradingBot:
    def process_signal(self, signal):
        symbol = signal['symbol']
        direction = signal['direction']
        order_type = "buy" if direction == "LONG" else "sell"
        
        result = place_trade(symbol, 0.1, order_type)
        return result
    """)

if __name__ == "__main__":
    test_cursor_mt5_integration()
    demonstrate_usage() 