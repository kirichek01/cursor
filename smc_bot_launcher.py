#!/usr/bin/env python3
"""
–°–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç - —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ SMC —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å –∞–Ω–∞–ª–∏–∑–æ–º 
order blocks, FVG –∏ –∏–Ω–¥—É—Å–º–µ–Ω—Ç–æ–≤
"""

import os
import sys
import subprocess
from pathlib import Path

def launch_smc_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç–∞."""
    try:
        # –ü—É—Ç—å –∫ —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç—É
        smc_bot_path = Path("sms_bot/smc_bot.py")
        
        if smc_bot_path.exists():
            print("üöÄ –ó–∞–ø—É—Å–∫ —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç–∞...")
            print("üìä –§—É–Ω–∫—Ü–∏–∏:")
            print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ order blocks")
            print("   ‚Ä¢ –ü–æ–∏—Å–∫ Fair Value Gaps (FVG)")
            print("   ‚Ä¢ –ò–Ω–¥—É—Å–º–µ–Ω—Ç—ã")
            print("   ‚Ä¢ Break of Structure (BOS)")
            print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ SMC")
            print("   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏")
            print()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
            process = subprocess.Popen([
                sys.executable, 
                str(smc_bot_path)
            ], 
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
            )
            
            print(f"‚úÖ –°–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
            print("üì± –û—Ç–∫—Ä–æ–µ—Ç—Å—è GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç–∞")
            
            return process
            
        else:
            print("‚ùå –§–∞–π–ª —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(f"   –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {smc_bot_path.absolute()}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–º–∞—Ä—Ç–º–∞–Ω–∏ –±–æ—Ç–∞: {e}")
        return None

if __name__ == "__main__":
    launch_smc_bot() 