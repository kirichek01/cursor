#!/usr/bin/env python3
"""
Combine Trade Bot - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–ê–≤—Ç–æ—Ä: Kirichek
"""

import subprocess
import sys
import os

def install_package(package):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç."""
    try:
        print(f"üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {package}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])
        print(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏."""
    print("=" * 50)
    print("üîß Combine Trade Bot - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    print("–ê–≤—Ç–æ—Ä: Kirichek")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    packages = [
        "flet>=0.21.0",
        "requests>=2.31.0",
        "openai>=1.0.0",
        "telethon>=1.32.0",
        "pandas>=2.0.0",
        "numpy>=1.24.0",
        "matplotlib>=3.7.0",
        "plotly>=5.15.0",
        "python-dotenv>=1.0.0"
    ]
    
    print("üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã:")
    for package in packages:
        print(f"   ‚Ä¢ {package}")
    
    print("\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...")
    
    success_count = 0
    total_count = len(packages)
    
    for package in packages:
        if install_package(package):
            success_count += 1
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {success_count}/{total_count} –ø–∞–∫–µ—Ç–æ–≤")
    
    if success_count == total_count:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö –≤—Ä—É—á–Ω—É—é:")
        failed_packages = [pkg for pkg in packages if not install_package(pkg)]
        for package in failed_packages:
            print(f"   pip install {package}")

if __name__ == "__main__":
    main() 